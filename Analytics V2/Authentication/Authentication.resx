<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="HeaderGroup.ValuesPrimary.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABkAAAAZCAYAAADE6YVjAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADr8AAA6/ATgFUyQAAAAGYktHRAD/AP8A/6C9p5MAAAAHdElNRQfeAhEPKiu+DsYw
        AAAEiUlEQVRIS71Va0ybVRg+P/2DIu6CGwwkG4zbohtoDAq6MBZ2J2Ym/jAqKtuI0W2wuUyXuEh0Xn4w
        YDAERnZzXAqjMKBcWoZUBJGIogR0Q0a/tkCBUiht+b72ezw9SwtfKIwt0R9v2nOec97nfd73Pe9HAJD/
        2lZE0N8xhD71II1lPqDSwRl0GqySvaWCXZbEZDCTwuNVyD1Sjjxqss8bMWcXyc4mPbYrdIhTaJGsHqO+
        xWX9LAne+0NPst4rRcHRmyg8VoUrp24hY1cedlQNYZ9qBHub9dhFyRKp7WjQYcJmX9KXR+BOt4acT76B
        3MPlKKHRt17vRlHyNRwo7sV+9TheqdfhUPsYvu414jVK+CpVFFunw4jFM9EikvsEJTQ9MnADo268dIxH
        vGoUsfVadI/bJPdk98zkxVqOYSMWYZFPyQbXP0qy3i3BBarAZp5j2ICJJ/LhWcTUOqPVYsw6H621TQmb
        WsmK32mwkRiKx1GiGcEh8etezJqsJCelDHmpMvzdNcz2T3RNUOccy3liox662fkoJz4+Ak3wE8wmTqUy
        om96p0hCow57aL0Wdpqb5OontSg4Jqd2kx2wiyDRNRySaM73KfV4q21UclGz+UnoYkOZcRGrGTbDO4hT
        yU5KlPGb0X2ekYxzU0zFpfRqXDld6wad3eOMzHnx7K+TEpKxN3dT52ugjQ6ANioAjuFB5ms7bYIDNKiX
        aXO41DDASvPvrEXxiWpcoO/BuXbum2luz/1uRH6/yeOjmy7KgvGrM+BCfTAe5o3vL1cQv1YeB1tGmBoJ
        iXPR164h2akKFB6X49qndSt6yS4nFoWcaDZ5YW6LD86kpJPHlAI0lvniL+gCK/knczdyj7Yg/6NqlH3R
        /HBEdZWEo3UyR63DxBsJngvPq0KA289gOi8ExWlVyDksQ8U5JYwj02TKMLOiGTd5No1oowOhj/KH4e39
        0nSJxl8IX78GQkskHK2UjKavnBLkf1hJ55YMme/cQE/zXxIiB1dG+DpvOM2hlTFMtNkIF76KdlwYNBu9
        FteEV/iCV4VDuL3VDWanlKL4ZA2K0uTMXDVw/vING8Arw+idCPANvm6MC3sKupeCoU98fjGJY/gK4RVr
        6YV1EG33x8mldDkuflDBJsCtnB/mSUQH4ZsCKUko+OaNEFSRDLPUVhLtc+uh2fQ4+Dv9buWSFNh7DjES
        oS2WXeLnRKK83AV1eY9URXMw+EZ/CD8lQOjYQyf9ZLzzvHarH5sA5tJiz2PFlQqhMwl8/WoIPyct6i7R
        YSO8MoTWLhDi3ZMSXBcXzhSYMjOWH5Buoo69lIimThVGi1oGcfpPYh/6jqpcD/uPETDl+cJ4tZLwA31k
        uuA84SLXMoKpbz/z2IVLtqbQ9Tp4xdM0LTT3jX7gm4IgtEbSvSD0entBty0A3BZfaLdtYCkyZX/5cB8t
        lyJ732mqaBVVtJkWOQT2Vn+MX8yg7ekDXUwwdC8EQRPijVl52aN9fl1E4mQHEdppgdVxEGfvMmeWphqi
        j38WhvcPwj6qf+BDfeCBhW/jUf//LyT/AsqZAZndRbgMAAAAAElFTkSuQmCC
</value>
  </data>
</root>